## Example 5

from sklearn import datasets
import pandas
from sklearn.cluster import KMeans
from matplotlib import pyplot

iris = datasets.load_iris()
X = iris.data[:,:2]
y = iris.target

# Split the data

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=5)

# Build the "training" cluster
kmeans_train = KMeans(n_clusters=3, random_state=0)
model_train = kmeans_train.fit(X_train)
labels_train = model_train.labels_
pyplot.scatter(X_train[:,0], X_train[:,1], c=labels_train, cmap='rainbow')

model_train.cluster_centers_

df_train= pandas.DataFrame(X_train, columns = ['sepal_length', 'sepal_width'])
df_train['cmember']= labels_train

# Built the "test" cluster
kmeans_test = KMeans(n_clusters=3, random_state=0)
model_test = kmeans_test.fit(X_test)
labels_test = model_test.labels_
pyplot.scatter(X_test[:,0], X_test[:,1], c=labels_train, cmap='rainbow')

model_test.cluster_centers_

df_test= pandas.DataFrame(X_test, columns = ['sepal_length', 'sepal_width'])
df_test['cmember']= labels_test

# T-test to compare the train vs. test clusters

from scipy.stats import ttest_ind

ttest_ind(df_train.loc[df_train['cmember'] == 0,['sepal_length']],df_test.loc[df_test['cmember'] == 1,['sepal_length']])
ttest_ind(df_train.loc[df_train['cmember'] == 0,['sepal_width']],df_test.loc[df_test['cmember'] == 1,['sepal_width']])

ttest_ind(df_train.loc[df_train['cmember'] == 1,['sepal_length']],df_test.loc[df_test['cmember'] == 2,['sepal_length']])
ttest_ind(df_train.loc[df_train['cmember'] == 1,['sepal_width']],df_test.loc[df_test['cmember'] == 2,['sepal_width']])

ttest_ind(df_train.loc[df_train['cmember'] == 2,['sepal_length']],df_test.loc[df_test['cmember'] == 0,['sepal_length']])
ttest_ind(df_train.loc[df_train['cmember'] == 2,['sepal_width']],df_test.loc[df_test['cmember'] == 0,['sepal_width']])

