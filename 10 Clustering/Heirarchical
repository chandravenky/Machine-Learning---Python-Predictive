#-----------------------------------------
#------------Single Linkage-------------
#-----------------------------------------


X = [[2],[5],[9],[15],[16],[18],[25],[33],[33],[45]]

from scipy.cluster.hierarchy import dendrogram, linkage  

linked = linkage(X, 'single')

dendrogram(linked, labels = X)

#-----------------------------------------
#------------Complete Linkage-------------
#-----------------------------------------

#Using scipy

X = [[2],[5],[9],[15],[16],[18],[25],[33],[33],[45]]

from scipy.cluster.hierarchy import dendrogram, linkage  

linked = linkage(X, 'complete')

dendrogram(linked, labels=X)

# Using sklearn

from sklearn.cluster import AgglomerativeClustering

cluster = AgglomerativeClustering(n_clusters=2, affinity = 'euclidean', linkage = 'complete')

cluster.fit_predict(X)

print(cluster.labels_)

#--------------------------------------------------------
#------------WIth real data - scale features-------------
#--------------------------------------------------------

import pandas
import numpy

utilities_df = pandas.read_csv(r"C:\Users\vchan\OneDrive\Desktop\INSY 662 - Data mining\Session 10\Utilities.csv")

X = utilities_df[['Sales','Fuel_Cost']]

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
X_std = scaler.fit_transform(X)

from scipy.cluster.hierarchy import dendrogram, linkage  
linked = linkage(X_std, 'complete')
dendrogram(linked, labels=numpy.ravel(utilities_df['Company']))

# Using sklearn

from sklearn.cluster import AgglomerativeClustering

cluster = AgglomerativeClustering(n_clusters=2, affinity= 'euclidean', linkage = 'complete')
cluster.fit_predict(X_std)
print(cluster.labels_)

from matplotlib import pyplot

pyplot.scatter(utilities_df['Sales'], utilities_df['Fuel_Cost'], c=cluster.labels_, cmap='rainbow')
